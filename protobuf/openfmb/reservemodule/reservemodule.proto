syntax = "proto3";

// OpenFMB Operational Model (61850-CIM) (v2.0.0).eap
// Thursday, September 17, 2020 3:39:33 PM UTC

// [From Jed]: <font color="#2e75b5"><b>ReserveAvailability</b></font> Published to all neighbors
// (hierarchical or peers)  <font color="#5b9bd5"><b>Usage:</b></font> <ul>  <li>Specific to each point
// of interconnection.</li>  <li>Updated Regularly.</li> </ul> <font
// color="#5b9bd5"><b>Content:</b></font> <ul>  <li><b>Standby Margin Available</b> (unallocated) -
// &gt; All available and none reserve if the neighbor is not connected, may have additional capacity
// it can bring on line even after intertie-connection point.<ul>  <li><b>Cold Standby</b> --
// undeployed unallocated margin<ul>  <li>Amps</li>  <li>VARS</li> </ul> </li> </ul> </li> </ul> <ul> 
// <li><ul>  <li><ul>  <li></li> </ul> </li> </ul> </li> </ul> <ul>  <li><ul>  <li><b>[] Array of
// Standby Margin Requests Being Fulfilled </b>by this interconnection agreement right now - Provides 
// feedback on startup requests<ul>  <li>Request ID</li>  <li>Estimated Time to convert to Margin --
// How much time remaining before the capacity is expected to be available as Margin.</li>  <li>Amount
// Coming Online – Could be 0 if the request is “rejected”<ul>  <li>Amps</li>  <li>VARS</li> </ul>
// </li> </ul> </li> </ul> </li> </ul> <ul>  <li><ul>  <li><ul>  <li><ul>  <li></li> </ul> </li> </ul>
// </li> </ul> </li> </ul> <ul>  <li><ul>  <li><ul>  <li>Exclusive Lease Window (time) -- Will keep the
// margin available exclusive to this intertie for some period? (Need to be specified) after converting
// to allow time to have the reserve formally leased. – Will stay here with an “Estimated Time to
// convert = 0) and this counting down to allow the other side time to see that the request was
// received.  </li> </ul> </li> </ul> </li> </ul> <ul>  <li><ul>  <li><ul>  <li></li> </ul> </li> 
// <li></li> </ul> </li> </ul> <ul>  <li><b>Margin </b>(unallocated, but available at this intertie
// location)<ul>  <li>Amps</li>  <li>VARS</li> </ul> </li> </ul> <ul>  <li><ul>  <li></li> </ul> </li>
// </ul> <ul>  <li><b>Incremental Margin</b> (How much load you can slam on at a time without causing
// problems, please respect!! (no way to enforce this))<ul>  <li>Amps</li>  <li>VARS</li> </ul> </li>
// </ul> <ul>  <li><ul>  <li></li> </ul> </li> </ul> <ul>  <li><b>[] Array of Reserve Margin
// Reservation</b> by this interconnection agreement right now - Provides  feedback on leases<ul> 
// <li>Lease ID</li>  <li>Lease Start time ? (This can accommodate a "future" request if a neighbor
// knows it's in trouble)</li>  <li>Lease Expiry countdown ?  -- Remaining time just in case clocks
// aren't synched.</li> </ul> </li> </ul> <ul>  <li><ul>  <li></li> </ul> </li> </ul>  <font
// color="#2e75b5"><b>ReserveAllocation</b></font> A request event to a publisher of
// ReserveAvailability, done when the neighbor wants to change the state of the ReserveAvailability
// published by its neighbor.  <font color="#5b9bd5"><b>Usage:</b></font> <ul>  <li>Specific to each
// point of interconnection.</li>  <li>Updated by single event</li>  <li>Has expected response time
// (Two generals problem, specify a timeout?)</li> </ul> <font color="#5b9bd5"><b>Content:</b></font>
// <ul>  <li><b>Bring Online Request</b><ul>  <li>Request ID</li>  <li>Amps needed</li>  <li>VARS</li> 
// <li>Cost implication/ urgency?..... Should we include a cost negotiation at all?  Presumably there
// may be conflicting needs for power at the neighbor, and if the neighbor can do some load shedding /
// control loads, it could free up some more capacity, but would need to have information to perform
// that evaluation.  For example, a hospital on feeder 1 might need to be powered, but feeder 2 nearby
// doesn't have the capacity to pick it up.  A high cost-implication could incentivize feeder 1 to make
// enough Margin available to pick-up the hospital by shutting off a residential circuit or sending a
// load-reduction request to all residential meters.</li> </ul> </li> </ul> <ul>  <li><ul>  <li></li>
// </ul> </li> </ul> <ul>  <li><b>Margin Reservation Request</b><ul>  <li>Lease ID (generated by the
// lease-or for tracking)</li>  <li>Lease Start time ? (This can accommodate a near "future" request if
// a neighbor knows it's in trouble) - -Allow for "Immediate"( could use '0' as sentinel) -- may be in
// conflict with schedule, but would allow peers to coordinate, which don't exchange a schdeule.  NOTE-
// the only place where absolute time is used in these interactions. Should consider allowing 'time' to
// be sourced differently in neighbors and have different values.</li>  <li>Lease Expiry? -- Neighbor
// will reject or fulfil ID with shorter duration if it can't accommodate.   </li> </ul> </li> </ul>
// <ul>  <li><ul>  <li></li> </ul> </li> </ul> <ul>  <li><b>Early Lease Cancelation</b><ul>  <li>Lease
// ID</li> </ul> </li> </ul> <ul>  <li><ul>  <li></li> </ul> </li> </ul>
package reservemodule;
option go_package = "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/reservemodule";
option java_package = "openfmb.reservemodule";
option java_multiple_files = true;
option csharp_namespace = "openfmb.reservemodule";

import "uml.proto";
import "commonmodule/commonmodule.proto";

// [OpenFMB LN extension] Reserve margin in A, W, VAr and VA.
message ReserveMargin
{
    // UML inherited base object
    commonmodule.LogicalNode logicalNode = 1 [(uml.option_parent_message) = true];
    // Phase to ground/phase to neutral three phase currents.
    commonmodule.PMG A = 2;
    // Phase to ground/phase to neutral apparent powers S.
    commonmodule.PMG VA = 3;
    // Phase to ground/phase to neutral reactive powers Q.
    commonmodule.PMG VAr = 4;
    // Phase to ground/phase to neutral real powers P.
    commonmodule.PMG W = 5;
}

// MISSING DOCUMENTATION!!!
message ReserveAvailability
{
    // MISSING DOCUMENTATION!!!
    ReserveMargin incrementalMargin = 1;
    // MISSING DOCUMENTATION!!!
    ReserveMargin margin = 2;
    // MISSING DOCUMENTATION!!!
    ReserveMargin standbyMargin = 3;
}

// MISSING DOCUMENTATION!!!
message AllocatedMargin
{
    // MISSING DOCUMENTATION!!!
    string requestID = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    ReserveMargin allocatedMargin = 2;
    // MISSING DOCUMENTATION!!!
    ReserveMargin allocatedStandbyMargin = 3;
}

// Reserve availability profile
message ReserveAvailabilityProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    AllocatedMargin allocatedMargin = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    ReserveAvailability reserveAvailability = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.ConductingEquipment tiePoint = 6 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// MISSING DOCUMENTATION!!!
message ReserveRequest
{
    // MISSING DOCUMENTATION!!!
    string requestID = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    ReserveMargin margin = 2;
    // MISSING DOCUMENTATION!!!
    ReserveMargin standbyMargin = 3;
}

// Reserve availability profile
message ReserveRequestProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem requesterCircuitSegmentService = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    ReserveRequest reserveRequest = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem responderCircuitSegmentService = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.ConductingEquipment tiePoint = 5 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

