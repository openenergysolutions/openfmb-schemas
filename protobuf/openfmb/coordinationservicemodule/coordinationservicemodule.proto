syntax = "proto3";

// OpenFMB Operational Model (61850-CIM) (w ShuntModule + new status points).eap
// Friday, November 15, 2019 1:44:21 PM UTC

package coordinationservicemodule;
option go_package = "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb/coordinationservicemodule";
option java_package = "openfmb.coordinationservicemodule";
option java_multiple_files = true;
option csharp_namespace = "openfmb.coordinationservicemodule";

import "uml.proto";
import "google/protobuf/wrappers.proto";
import "commonmodule/commonmodule.proto";

// State kind
enum CoordinationServiceModeKind
{
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_none = 0;
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_auto = 1;
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_manual = 2;
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_netzero = 3;
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_start = 4;
    // MISSING DOCUMENTATION!!!
     CoordinationServiceModeKind_stop = 5;
}

message Optional_CoordinationServiceModeKind
{
    CoordinationServiceModeKind value = 1;
}

// Coordination service mode kind
message ENG_CoordinationServiceModeKind
{
    // The value of the coordination service mode.
    CoordinationServiceModeKind setVal = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    google.protobuf.StringValue setValExtension = 2;
}

// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
// Control), following 61850 naming convention.
message CoordinationControlDCSC
{
    // UML inherited base object
    commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.ControlDPC Island = 3;
}

// Switch discrete control
message CoordinationControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    CoordinationControlDCSC coordinationControlDCSC = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Switch control profile
message CoordinationControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem applicationSystem = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CoordinationControl coordinationControl = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
// Control), following 61850 naming convention.
message CoordinationEventDCSC
{
    // UML inherited base object
    commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS Island = 3;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleAuto = 4;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleManual = 5;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleNetzero = 6;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleStart = 7;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleStop = 8;
}

// Switch event
message CoordinationEvent
{
    // UML inherited base object
    commonmodule.EventValue eventValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CoordinationEventDCSC coordinationEventDCSC = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Switch event profile
message CoordinationEventProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.EventMessageInfo eventMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem applicationSystem = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CoordinationEvent coordinationEvent = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
// Control), following 61850 naming convention.
message CoordinationStatusDCSC
{
    // UML inherited base object
    commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS Island = 3;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleAuto = 4;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleManual = 5;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleNetzero = 6;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleStart = 7;
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusSPS PermissibleStop = 8;
}

// Switch event
message CoordinationStatus
{
    // UML inherited base object
    commonmodule.EventValue eventValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CoordinationStatusDCSC coordinationStatusDCSC = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Switch event profile
message CoordinationStatusProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.EventMessageInfo eventMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ApplicationSystem applicationSystem = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CoordinationStatus coordinationStatus = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

