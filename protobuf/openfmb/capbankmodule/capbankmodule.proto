syntax = "proto3";

// OpenFMB Operational Model (61850-CIM) (Duke working).eap
// Wednesday, August 19, 2020 9:08:37 PM UTC

package capbankmodule;
option go_package = "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb/capbankmodule";
option java_package = "openfmb.capbankmodule";
option java_multiple_files = true;
option csharp_namespace = "openfmb.capbankmodule";

import "uml.proto";
import "commonmodule/commonmodule.proto";

// Cap bank compensator system
message CapBankSystem
{
    // UML inherited base object
    commonmodule.ConductingEquipment conductingEquipment = 1 [(uml.option_parent_message) = true];
}

// LN: Power cap bank  Name: YPSH
message CapBankControlYPSH
{
    // (controllable) If true, 'close' action has been blocked; can be set from another logical node. 
    // Operating capability 'ShOpCap' does not reflect the blocked closing.
    commonmodule.ControlSPC BlkCls = 1;
    // (controllable) If true, 'open' action has been blocked; can be set from another logical node.
    // Operating capability 'ShOpCap' does not reflect the blocked opening.
    commonmodule.ControlSPC BlkOpn = 2;
    // (controllable) Position of the switch of power shunt.
    commonmodule.PhaseDPC Pos = 3;
}

// Point definition (Point)
message CapBankPoint
{
    // Regulator control
    CapBankControlYPSH control = 1;
    // Start time
    commonmodule.Timestamp startTime = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Curve shape setting (FC=SP) (CSG_SP)
message CapBankCSG
{
    // The array with the points specifying a curve shape.
    repeated CapBankPoint crvPts = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
message CapBankControlScheduleFSCH
{
    // Control value in CSG type
    CapBankCSG ValCSG = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Using 61850 FSCC for cap bank control
message CapBankControlFSCC
{
    // UML inherited base object
    commonmodule.ControlFSCC controlFSCC = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankControlScheduleFSCH capBankControlScheduleFSCH = 2;
}

// CapBank control
message CapBankControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    CapBankControlFSCC capBankControlFSCC = 3;
}

// Cap bank control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
message CapBankControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankControl capBankControl = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for cap bank discrete control:
message CapBankDiscreteControlZCAP
{
    // UML inherited base object
    commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.PhaseDPC Pos = 2;
}

// Cap bank discrete control
message CapBankDiscreteControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    CapBankDiscreteControlZCAP capBankDiscreteControlZCAP = 3;
}

// Cap bank discrete control profile.  Instructs an end device (or an end device group) to perform
// a specified action.
message CapBankDiscreteControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankDiscreteControl capBankControl = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// LN: Power cap bank  Name: YPSH
message CapBankEventAndStatusYPSH
{
    // (controllable) If true, 'close' action has been blocked; can be set from another logical node. 
    // Operating capability 'ShOpCap' does not reflect the blocked closing.
    commonmodule.StatusSPS BlkCls = 1;
    // (controllable) If true, 'open' action has been blocked; can be set from another logical node.
    // Operating capability 'ShOpCap' does not reflect the blocked opening.
    commonmodule.StatusSPS BlkOpn = 2;
    // (controllable) Position of the switch of power shunt.
    commonmodule.PhaseDPS Pos = 3;
}

// Point definition (Point)
message CapBankEventAndStatusPoint
{
    // Regulator control
    CapBankEventAndStatusYPSH eventAndStatus = 1;
}

// OpenFMB 61850 specialization for both CapBankEventProfile and CapBankStatusProfile
message CapBankEventAndStatusZCAP
{
    // UML inherited base object
    commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    // MISSING DOCUMENTATION!!!
    CapBankEventAndStatusPoint PointStatus = 3;
}

// Cap bank event
message CapBankEvent
{
    // UML inherited base object
    commonmodule.EventValue eventValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEventAndStatusZCAP capBankEventAndStatusZCAP = 2;
}

// Cap bank status profile
message CapBankEventProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.EventMessageInfo eventMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEvent capBankEvent = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Cap bank reading value
message CapBankReading
{
    // UML inherited base object
    commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.PhaseMMTN phaseMMTN = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMTR readingMMTR = 3;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMXU readingMMXU = 4;
}

// Cap bank reading profile
message CapBankReadingProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankReading capBankReading = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Cap bank status
message CapBankStatus
{
    // UML inherited base object
    commonmodule.StatusValue statusValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEventAndStatusZCAP capBankEventAndStatusZCAP = 2;
}

// Cap bank status profile
message CapBankStatusProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.StatusMessageInfo statusMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankStatus capBankStatus = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

