syntax = "proto3";

// OpenFMB Operational Model (61850-CIM) (w ShuntModule + new status points).eap
// Friday, November 15, 2019 1:44:21 PM UTC

package reclosermodule;
option go_package = "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb/reclosermodule";
option java_package = "openfmb.reclosermodule";
option java_multiple_files = true;
option csharp_namespace = "openfmb.reclosermodule";

import "uml.proto";
import "google/protobuf/wrappers.proto";
import "commonmodule/commonmodule.proto";

// Specialized 61850 FSCC class.  LN: Schedule controller   Name: FSCC
message RecloserControlFSCC
{
    // UML inherited base object
    commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.SwitchControlScheduleFSCH switchControlScheduleFSCH = 2;
}

// Recloser discrete control
message RecloserControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    RecloserControlFSCC recloserControlFSCC = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Pole-mounted fault interrupter with built-in phase and ground relays, current transformer (CT),
// and supplemental controls.
message Recloser
{
    // UML inherited base object
    commonmodule.ConductingEquipment conductingEquipment = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    google.protobuf.BoolValue normalOpen = 2;
}

// Recloser control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
message RecloserControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    Recloser recloser = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    RecloserControl recloserControl = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for RecloserDiscreteControlProfile: Added blk  LN: Circuit
// breaker   Name: XCBR
message RecloserDiscreteControlXCBR
{
    // UML inherited base object
    commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ControlDPC Pos = 2;
}

// Recloser discrete control
message RecloserDiscreteControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    RecloserDiscreteControlXCBR recloserDiscreteControlXCBR = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.DeviceControl deviceControl = 4;
}

// Recloser control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
message RecloserDiscreteControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    Recloser recloser = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    RecloserDiscreteControl recloserDiscreteControl = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Recloser event
message RecloserEvent
{
    // UML inherited base object
    commonmodule.EventValue eventValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Recloser event profile
message RecloserEventProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.EventMessageInfo eventMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    Recloser recloser = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    RecloserEvent recloserEvent = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Recloser reading value
message RecloserReading
{
    // UML inherited base object
    commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMXU diffReadingMMXU = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.PhaseMMTN phaseMMTN = 3;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMTR readingMMTR = 4;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMXU readingMMXU = 5;
}

// Recloser reading profile
message RecloserReadingProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    Recloser recloser = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    repeated RecloserReading recloserReading = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1, (uml.option_multiplicity_max) = 2];
}

// Recloser status
message RecloserStatus
{
    // UML inherited base object
    commonmodule.StatusValue statusValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    commonmodule.DeviceStatus deviceStatus = 3;
}

// Recloser status profile
message RecloserStatusProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.StatusMessageInfo statusMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.IED ied = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    Recloser recloser = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    RecloserStatus recloserStatus = 4 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

